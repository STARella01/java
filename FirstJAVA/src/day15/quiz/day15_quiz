
	### 1
	수 많은 마라톤 선수들이 마라톤에 참여하였습니다.
	단 한 명의 선수를 제외하고는 모든 선수가 마라톤을 완주하였습니다.
	마라톤에 참여한 선수들의 이름이 담긴 배열 participant와 완주한 선수들의 이름이 담긴 배열
	completion이 주어질 때에, 완주하지 못한 선수의 이름을 return하도록 solution 함수를 작성해 주세요.
	
	<참고>
	- completion의 길이는 participant의 길이보다 1 작습니다.
	- 참가자의 이름은 1개 이상 20개 이하의 알파벳 소문자로 이루어져 있습니다.
	- 참가자 중에는 동명이인이 있을 수 있습니다.
	
	선수들 키 값?
	participant 										completion 									return
	[leo, kiki, eden]									[eden, kiki]									leo
	[marina, josipa, nikola, vinko, filipa]			[marina, josipa, nikola, filipa]				vinko
	[mislav, stanko, mislav, ana]					[stanko, ana, mislav]						mislav	
	
	HASH 개념을 사용해야 합니다. 힌트 _ Map, getOtDefault()메서드
	
	 메서드 정의
	 public static String solution(String[] participant, String[] completion) {
	 }
	

	
	### 2
	 매운 것을 좋아하는 Leo는 모든 음식의 스코빌 지수를 K 이상으로 만들고 싶습니다. 모든 음식의 스코빌 지수를
	 K이상으로 만들기 위해 Leo는 스코빌 지수가 가장 낮은 두 개의 음식을 아래와 같이 특별한 방법으로 섞어 새로운
	 음식을 만듭니다. 
	
	  방식-식]
	  섞은 음식의 스코빌 지수 = 가장 맵지 않은 음식의 스코빌 지수 + (두 번째 맵지 않은 음식의 스코빌 지수 * 2)
	
	 Leo는 모든 음식의 스코빌 지수가 K이상이 될 때까지 반복하여 섞습니다. 
	 Leo가 가진 음식의 스코빌 지수를 담은 배열 scoville과 원하는 스코빌 지수 K가 주어질 때, 모든 음식의 스코빌
	 지수를 K이상으로 만들기 위해 섞어야 하는 최소 횟수를 return하도록 solution 함수를 작성해 주세요!!
	
	  - 함수는 모든 음식의 스코빌 지수를 K이상으로  만들 수 없는 경우에는 -1을 return 하도록 합니다.
	
	  scoville					K   return
	  [1, 2, 3, 9, 10, 12]  	7	2
	
	  Queue에는 우선 순위를 지정할 수 있는 ProrityQueue가 있습니다. 비교 메서드인 compare()나 compareTo()를
	  이용해 우선 순위를 지정하여 사용할 수 있습니다. 이 문제는 우선순위 큐를 이용하면 쉽게 해결이 됩니다. 
	
	  public static int solution(int[] scoville, int K) {
	
	  }
	  
	  