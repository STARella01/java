	
	[ 인터페이스 Interface  ] 
	추상 클래스와 매우 비슷
	시스템에서도 많이 사용
	
	ㅁ인터페이스 선언
	
		// 인터페이스는 부모 여러 개 가질 수 있음 - 다중 상속 가능
		interface InterfaceName [ extends < SuperInterface>,<SuperInterface> .... ]{  
			interfaceBody
		}
	
		Ex))  
		// interface 정의 
		public interface Aquatic{
			public abstract void swimming(); 					// abstract 생략도 가능
			public abstract void breathUnderWater();			// abstract 생략도 가능
		}
	
		- 인터페이스는 골격만 정의해 놓은 것으로 주로 기능(메서드)의 명세를 정의
		- 인터페이스 내에 메서드는 모두 추상메서드이며 public abstract는 생략가능함.
		- 인터페이스 내에 변수는 항상 public static final이며, 이 또한 생략이 가능하다. (인터페이스는 상수입니다.)
		- 인터페이스는 구현하면 다중 상속과 같은 효과를 낼 수 있음. (상속을 여러 개 받으면 어느 부모의 멤버를
		  상속 받아야 할지 결정할 수 없지만, 인터페이스는 클래스의 골격에 해당하기 때문에 여러 개를 구현할 수 있음.

		
		class className implements InterfaceName1,  InterfaceName2, ... {
			className
		}
		
		
		Ex)) 클래스에 인터페이스 구현
		public class Mermaid extends Human implements Aquatic{
			public void swimming(){
				// 인어가 수영하는 기능 구현
			}
			
			public void breathUnderWater(){
				// 물 속에서 숨쉬는 기능 구현
			}
		}
		
		-인터페이스는 implements라는  키워드를 통해 구현
		-여러 개의 인터페이스를 동시에 구현할 수 있음.
		- 반드시 인터페이스 내에 모든 메서드를 구현해야 합니다.
		
		
		
	
