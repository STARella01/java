JAVA API (Application Programming Interface)

 	 [ API ]
 	- 라이브러리라고도 부르며, 프로그램 개발에 자주 사용되는 클래스 및 인터페이스의 모음을 말함.
 	- 자바 표준 API를 확인
 	
 	[ java.lang ] 패키지
 	- java.lang 패키지는 자바 프로그램의 기본적인 클래스들을 담고 있는 패키지
 	- 이런 이유로, java.lnag 패키지에 있는 클래스와 인터페이스는 import 구문 없이 사용이 가능.
 	- 
 	
 	java.lang 패키지 주요 클래스
 	- Object : 자바 클래스의 최상위 클래스
 	- System : 표준 입력장치(키보드)로부터 데이터를 입력받거나 표준 출력장치(모니터)로 
 	출력하기 위한 클래스
 	- Class :  클래스를 메모리에 로딩할 때 사용 
 	- String : 문자열을 저장하고, 문자열의 여러 가지 정보를 얻을 때 사용.
 	- Math : 수학 함수를 이용할 때 사용.
 	- Wrapper : ( byte short integer long float double boolean character )
 				  : ( 기본 데이터 타입의 객체를 만들 때 사용 )
 				  
	[ Object ]
	- 클래스를 선언할 때 extends 키워드로 다른 클래스를 상속하지 않으면 묵시적으로 object 클래스를 상속
	- 모든 클래스가 Object룰 상속하기 때문에 Object의 메서드는 모든 클래스에서 사용이 가능함.  ( hash )
	- 
	
	[ System ]
	- System 클래스를 이용하면 운영체제의 일부 기능을 이용할 수 있다.
	( 프로그램 종료, 키보드 입력, 모니터 출력, 메모리 정리, 현재시간 읽기(시스템에 현재 설정된 시간 불러옴) 등 작업이 가능. )
	- System 클래스의 모든 멤버는 static으로 구성되어 있어 클래스 이름으로 바로 접근이 가능함.
	
	
	[ System 클래스의 주요 메서드 ]
	1. exit() : 현재 실행하고 있는 프로세스를 강제 종료. 정상적인 종료일 경우 status값을 0으로 주고,
	비정상적인 경우에는 0이외의 값을 줌.
	// 프로세스는 운영체제가 관리함.
	
	2. currentTimeMillis() : 컴퓨터의 시계로부터 현재 시간을 읽어서 밀리세컨드 ( 1/1000초 ) 단위와 나노세컨드
	( 1/ 10 ^ 9승 초)  - 10억분의 1초  의 long값을 리턴. 주로 프로그램 실행 요소 시간 중심으로 성능을 테스트할 때 사용
	
	3. getProperty() : JVM이 시작할 때 자동 설정되는 시스템 속성값을 구합니다.
	
	4. gc() : Garbage Collector를 실행!
	
	[ String 클래스 ]
	- String의 생성자를 사용하여 객체를 만들 필요 없이 기초 데이터를 사용할 때 처럼 바로 초기화해서 사용 가능.
	
	[ String의 주요 메서드 ] - 외워야 함!! 
	1. charAt() : 특정 인덱스의 글자를 리턴
	2. indexOf() : 특정 문자열의 시작 인덱스 값을 반환 만약 주어진 문자열이 없는 경우 -1을 반환.
	3. length()* : 문자열의 길이 값을 알려줌
	4. replace()* : 특정 문자열을 변경
	5. substring()* : 인덱스를 기준으로 그 앞의 문자열 잘라줌. 매개변수가 2개인 경우, 처음 매개변수 값 이상, 
	두번째 매개값 미만의 문자열을 제외한 나머지를 삭제.
	6. toUpperCase() : 영문자 문자열을 대문자로 치환
	7. toLowerCase() : 영문자 문자열을 소문자로 치환
	8. trim() : 문자열의 앞, 뒤 공백을 제거
	9. equals() : 문자열의 값을 비교
	10. value() : 기본 데이터 타입의 값들을 문자열로 변환
	11. split()* : 특정 문자열 기준으로 잘라서 배열에 리턴
	
	String 클래스의 단점
	- String 클래스는 아주 많이 쓰이고 좋은 기능들을 많이 가지고 있지만, 메모리를 
	과소비한다는 문제점이 있음.
	- String 객체는 처음 초기화된 데이터에 변화가 생기면 기존 객체를 재활용하지 않고,
	새로운 객체를 생성합니다.
	
	String Builder (많은 문자열 사용 시 용이함)
	- String 클래스의 단점인 새로운 객체를 생성하는 문제로 인해 속도가 느려지는 현상이 발생하기 때문에
	이 문제를 해결하기 위해서 속도적인 측면에서 개선된 케이스.
	String builder method - 책에 잘 나와있음
	1. append()  : 기존 문자열의 뒤에 문자열을 추가합니다.
	2. insert() : 특정 위치에 문자열을 추가합니다.
	3. delete() : 문자열을 삭제합니다.
	4. deleteCharAt() : 특정 인덱스의 문자 하나를 삭제합니다.
	5. replace() : 문자열의 일부분을 다른 문자열로 대체합니다.
	6. setCharAt() : 문자열의 주어진 index의 문자를 다른 문자로 대체합니다.
	7. toString() : StringBuilder 객체의 값을 문자열로 변환 / 오브젝트에 오버라이드 해주는 애
	8. reverse() : 문자열을 거꾸로 뒤집습니다.
	
	
	
	Math 클래스 - 수학 관련
	Math 클래스는 수학 계산에 사용할 수 있는 메서드 제공
	Math 클래스가 제공하는 메서드모두 정적 메서드로 Math클래스 이름으로 바로 접근 사용이 가능
	
	math 클래스 주요 메서드
	1. abs() : 절대값
	2. ceil() : 올림값
	3. floor() : 내림값
	4. max() : 수를 비교하여 최대값
	5. min() : 수를 비교하여 최소값
	6. random() : 랜덤값 (0.0 <= x < 1.0 사이의 실수)
	7. rint() : 현재 수에서 가까운 정수를 실수형태로 구함
	8. round() : 반올림값을 구함.
	
	
	
	Wrapper 클래스
	-자바는 기본 타입의 값을 가지는 객체를 생성할 수 있습니다.
	-이런 객체를 포장(Wrapper)라고 합니다.
	이유는 기본 타입의 값을 객체 내부에 두고 포장한다는 개념이기 때문
	- 포장 객체의 특징은 포장하고 있는 기본 타입의 값은 외부에서 변경할 수 없다.
	(다만 변경하고자 한다면 새로운 포장 객체를 생성해야 한다.)
	
	다양한 Wrapper 클래스
	-  byte short integer long float double boolean character 
	
	기본 타입의 값을 포장 객체로 만드는 과정 ( Boxing )이라고 하고
	포장 객체에서 기본 타입의 값을 얻어내는 과정을 ( Unboxing )이라고 한다.
	( 자바 1.8(자바8)버전부터 AutoBoxing을 지원함. )
	
	- 문자열을 기본 타입 값으로 변환할 때 많이 사용함.
	대부분의 포장 클래스는 "parse+기본타입"명으로 되어있는 static 메서드를 제공하고 있음.
	
	
	Date 클래스, SimpleDateFormat 클래스
	- Date클래스는 날짜를 표현하는 클래스. 객체 간에 날짜 정보를 주고 받을 때 주로 사용함.
	- Date 객체를 기본 생성자로 생성하면 컴퓨터의 현재 날짜를 읽어 객체로 만들어 줌
	- Date 클래스의 toString() 메서드는 영문으로 된 날짜 문자열을 리턴.
	* 특정 문자열 포맷으로 날짜를 얻고자 할 때는 SimpleDateFormat 클래스를 이용한다.
	
	SimpleDateFormat 클래스
	 SimpleDateFormat 클래스는 날짜를 원하는 형식으로 표현하기 위한 클래스
	 
	 java.text 패키지에 구성되어 있는 API
	 패턴 사용하여 생성자의 매개값으로 표현 형식을 지정하여 객체를 생성한 후
	 format() 메서드를 호출하여 패턴에 적용된 문자열을 얻습니다.
	 
	
	
	
					
 	
 