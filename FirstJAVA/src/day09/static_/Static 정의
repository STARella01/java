	[ Static ]
	
	Usage Modifier
	- Usage Modifier는 Access Modifier를 제외한 모든 Modifier를 가리킴
	- 여기 Usage Modifier(사용 제한자)중 Static, final, abstract 를 알아볼 예정
	- 이것 외에도 transient, Synchronized, volatile,native 등이 있습니다.
	
	
	# Static의 의미
	- 일반적으로 각 인스턴트들은 서로 독립적이라 객체 내에 변수값은 서로 다름.
	-  Person p1, Person p2가 있을 경우 각각의 p1.getName(), p2.getName() 메소드는 서로 다른 값을 가짐.
	-  static이 변수 앞에 붙으면 모든 인스턴스에 대해서 공유가 됨. - 서로 공통으로 가지는 저장 공간이라는 말
		->이때 변수는 인스턴스 단위가 아닌 클래스 단위로 바뀌게 된다. 때문에 static이 붙은 멤버 변수를 우리는 클래스
		변수라고 부르며, static이 붙지 않은 변수를 인스턴스 변수라고 한다.
	- 메서드에 static(클래스에 사용하는 메서드)이 붙는다면 해당 메서드는 인스턴스와 무관하기 때문에 인스턴스를 생성하지 않고도
		호출이 가능하다. (클래스에서 사용하는 메서드라는 소리!)
	- static과 관련된 자바문법
		> static 메서드 안에서는 non-static 멤버를 객체 생성 없이 직접 참조할 수 없음. (참조하려면 객체 생성해야 함.)
		> 반대로 static이 붙지 않는 메서드에서는 static 멤버들을 사용할 수 있습니다.	
	- 주로 모든 인스턴스가 공통된 변수 값을 가져야 할 때, static 변수를 사용하고, static 변수들과 관련된 작업을
		하거나 어떤 인스턴스 변수도 사용하지 않고, 매개변수로만 작업 처리하는 메서드는 static 메서드로 정의해 줍니다.
		ex)  Math 클래스의 메서드들.. 	
	
	
	
	 